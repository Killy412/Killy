<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>boatman&#39;s blog</title>
  <icon>https://killy412.com/icon.png</icon>
  <subtitle>这是一只三花</subtitle>
  <link href="https://killy412.com/atom.xml" rel="self"/>
  
  <link href="https://killy412.com/"/>
  <updated>2021-07-04T08:05:38.619Z</updated>
  <id>https://killy412.com/</id>
  
  <author>
    <name>船夫</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>全新服务器环境搭建(Docker+jre+mysql+nginx)</title>
    <link href="https://killy412.com/2021/07/02/%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    <id>https://killy412.com/2021/07/02/%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</id>
    <published>2021-07-02T09:53:47.000Z</published>
    <updated>2021-07-04T08:05:38.619Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;全新服务器环境搭建-Docker-jre-mysql-nginx&quot;&gt;&lt;a href=&quot;#全新服务器环境搭建-Docker-jre-mysql-nginx&quot; class=&quot;headerlink&quot; title=&quot;全新服务器环境搭建(Docker+jre+mysql+nginx)&quot;&gt;&lt;/a&gt;全新服务器环境搭建(Docker+jre+mysql+nginx)&lt;/h2&gt;&lt;h3 id=&quot;一-Docker安装&quot;&gt;&lt;a href=&quot;#一-Docker安装&quot; class=&quot;headerlink&quot; title=&quot;一. Docker安装&quot;&gt;&lt;/a&gt;一. Docker安装&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;安装docker&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;curl -sSL https://get.daocloud.io/docker | sh&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="Linux" scheme="https://killy412.com/categories/Linux/"/>
    
    
    <category term="Docker" scheme="https://killy412.com/tags/Docker/"/>
    
    <category term="Linux" scheme="https://killy412.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>2021半年展望及总结</title>
    <link href="https://killy412.com/2021/07/02/2021%E5%8D%8A%E5%B9%B4%E5%B1%95%E6%9C%9B%E5%8F%8A%E6%80%BB%E7%BB%93/"/>
    <id>https://killy412.com/2021/07/02/2021%E5%8D%8A%E5%B9%B4%E5%B1%95%E6%9C%9B%E5%8F%8A%E6%80%BB%E7%BB%93/</id>
    <published>2021-07-02T00:46:00.000Z</published>
    <updated>2021-07-08T13:28:26.339Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h3 id=&quot;半年总结&quot;&gt;&lt;a href=&quot;#半年总结&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    <category term="年度总结" scheme="https://killy412.com/categories/%E5%B9%B4%E5%BA%A6%E6%80%BB%E7%BB%93/"/>
    
    
    <category term="总结" scheme="https://killy412.com/tags/%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>Netty-NIO基础</title>
    <link href="https://killy412.com/2021/06/27/Netty-NIO%E5%9F%BA%E7%A1%80/"/>
    <id>https://killy412.com/2021/06/27/Netty-NIO%E5%9F%BA%E7%A1%80/</id>
    <published>2021-06-27T14:25:47.000Z</published>
    <updated>2021-06-27T15:09:48.317Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;IO基础知识&quot;&gt;&lt;a href=&quot;#IO基础知识&quot; class=&quot;headerlink&quot; title=&quot;IO基础知识&quot;&gt;&lt;/a&gt;IO基础知识&lt;/h2&gt;&lt;p&gt;在1.4版本之前，Java IO类库是阻塞IO；从1.4版本开始，引进了新的异步IO库，被称为JavaNew IO类库，简称为JAVA NIO.New IO类库的目标，就是要让Java支持非阻塞IO，基于这个原因，更多的人喜欢称Java NIO为非阻塞IO（Non-Block IO），称“老的”阻塞式Java IO为OIO（Old IO）。总体上说，NIO弥补了原来面向流的OIO同步阻塞的不足，它为标准Java代码提供了高速的、面向缓冲区的IO。&lt;/p&gt;</summary>
    
    
    
    <category term="Netty" scheme="https://killy412.com/categories/Netty/"/>
    
    
    <category term="Netty" scheme="https://killy412.com/tags/Netty/"/>
    
    <category term="NIO" scheme="https://killy412.com/tags/NIO/"/>
    
  </entry>
  
  <entry>
    <title>深入理解JVM虚拟机-类加载</title>
    <link href="https://killy412.com/2021/05/17/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3JVM%E8%99%9A%E6%8B%9F%E6%9C%BA-%E7%B1%BB%E5%8A%A0%E8%BD%BD/"/>
    <id>https://killy412.com/2021/05/17/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3JVM%E8%99%9A%E6%8B%9F%E6%9C%BA-%E7%B1%BB%E5%8A%A0%E8%BD%BD/</id>
    <published>2021-05-17T12:44:31.000Z</published>
    <updated>2021-06-27T15:18:24.299Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;类的生命周期&quot;&gt;&lt;a href=&quot;#类的生命周期&quot; class=&quot;headerlink&quot; title=&quot;类的生命周期&quot;&gt;&lt;/a&gt;类的生命周期&lt;/h2&gt;&lt;p&gt;主要分为&lt;strong&gt;加载-&amp;gt;链接-&amp;gt;初始化-&amp;gt;使用-&amp;gt;卸载&lt;/strong&gt;几个过程. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;加载&lt;/p&gt;
&lt;p&gt;跟去类的全限定名找到对应的class字节码文件,读取class文件,把静态数据结构转化为运行时数据结构,创建一个class对象,作为数据访问的入口.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;链接&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;验证: 检查字节码文件是否符合jvm规范,是否会危害jvm的安全.&lt;/li&gt;
&lt;li&gt;准备: 为static变量分配内存,同时赋初始值.&lt;/li&gt;
&lt;li&gt;解析: 把常量池中的符号引用转为直接引用.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;初始化.&lt;/p&gt;
&lt;p&gt;执行类构造器&lt;code&gt;clinit()&lt;/code&gt;函数,是由static变量赋值和static代码块组合而成.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;遇到new/getstatic/putstatic/invokestatic才会执行类的初始化过程.&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="JVM" scheme="https://killy412.com/categories/JVM/"/>
    
    
    <category term="JVM" scheme="https://killy412.com/tags/JVM/"/>
    
    <category term="类加载机制" scheme="https://killy412.com/tags/%E7%B1%BB%E5%8A%A0%E8%BD%BD%E6%9C%BA%E5%88%B6/"/>
    
  </entry>
  
  <entry>
    <title>并发之AQS</title>
    <link href="https://killy412.com/2021/05/02/%E5%B9%B6%E5%8F%91%E4%B9%8BAQS/"/>
    <id>https://killy412.com/2021/05/02/%E5%B9%B6%E5%8F%91%E4%B9%8BAQS/</id>
    <published>2021-05-02T09:53:47.000Z</published>
    <updated>2021-05-02T09:58:08.723Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;并发之同步器-AbstractQueueSynchronize&quot;&gt;&lt;a href=&quot;#并发之同步器-AbstractQueueSynchronize&quot; class=&quot;headerlink&quot; title=&quot;并发之同步器(AbstractQueueSynchronize)&quot;&gt;&lt;/a&gt;并发之同步器(AbstractQueueSynchronize)&lt;/h2&gt;&lt;p&gt;同步器是juc并发包中并发工具的基础,很多经常使用的同步工具类都是基于aqs实现的.例如ReentrantLock,CountDownLatch,Semphore等.&lt;/p&gt;
&lt;p&gt;基本的实现方式是通过一个state变量控制资源是否已经被占用,以及一个CLH队列实现.&lt;/p&gt;
&lt;h3 id=&quot;为什么要使用AQS-和synchronized相比有什么优势&quot;&gt;&lt;a href=&quot;#为什么要使用AQS-和synchronized相比有什么优势&quot; class=&quot;headerlink&quot; title=&quot;为什么要使用AQS,和synchronized相比有什么优势&quot;&gt;&lt;/a&gt;为什么要使用AQS,和synchronized相比有什么优势&lt;/h3&gt;</summary>
    
    
    
    <category term="并发" scheme="https://killy412.com/categories/%E5%B9%B6%E5%8F%91/"/>
    
    
    <category term="并发" scheme="https://killy412.com/tags/%E5%B9%B6%E5%8F%91/"/>
    
    <category term="AQS" scheme="https://killy412.com/tags/AQS/"/>
    
  </entry>
  
  <entry>
    <title>关于生产环境OOM问题的排查</title>
    <link href="https://killy412.com/2021/03/28/%E5%85%B3%E4%BA%8E%E7%94%9F%E4%BA%A7%E7%8E%AF%E5%A2%83OOM%E9%97%AE%E9%A2%98%E7%9A%84%E6%8E%92%E6%9F%A5/"/>
    <id>https://killy412.com/2021/03/28/%E5%85%B3%E4%BA%8E%E7%94%9F%E4%BA%A7%E7%8E%AF%E5%A2%83OOM%E9%97%AE%E9%A2%98%E7%9A%84%E6%8E%92%E6%9F%A5/</id>
    <published>2021-03-28T11:09:30.000Z</published>
    <updated>2021-05-02T06:58:46.068Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;概要&quot;&gt;&lt;a href=&quot;#概要&quot; class=&quot;headerlink&quot; title=&quot;概要&quot;&gt;&lt;/a&gt;概要&lt;/h2&gt;&lt;p&gt;在三月中开始的时候,线上突然经常报出 oom,刚开始怀疑那几天提交的代码有问题,因为之前没有报出来过. 代码排查了几遍,没发现有什么问题. 然后把 oom 时的内存信息 dump 下来使用 jvisualvm 进行分析,发现是 jdbc 查询时,有一个 DataResultSet 对象非常大,占用 1.9g 内存. 感觉是找到了问题的原因,但是找不到问题发生的地方,dump 下来了好几个内存快照,每次 oom 时的栈信息都不一样,但是都有这个 1.9g 的对象. 因为数据库有 600 多张表,整个系统业务很多,根本找不到是哪里查询时的占用的内存.&lt;/p&gt;
&lt;p&gt;然后对其中一台机器尝试过进行 jvm 参数调优,调大了堆,垃圾回收器换成了 CMS+ParNew,日常这种垃圾回收器表现比未调优之前要好,但是依然报出过 oom,报 oom 那段时间一直 fgc,gc 的时间能达到三千多秒…&lt;/p&gt;
&lt;p&gt;现在主要就是找到创建这个DataResultSet对象时的代码处.&lt;/p&gt;</summary>
    
    
    
    <category term="OOM" scheme="https://killy412.com/categories/OOM/"/>
    
    
    <category term="OOM" scheme="https://killy412.com/tags/OOM/"/>
    
    <category term="解决过程" scheme="https://killy412.com/tags/%E8%A7%A3%E5%86%B3%E8%BF%87%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>Git常用命令</title>
    <link href="https://killy412.com/2021/02/04/Git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <id>https://killy412.com/2021/02/04/Git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</id>
    <published>2021-02-04T01:43:27.000Z</published>
    <updated>2021-02-04T15:03:30.123Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;Git-常用命令&quot;&gt;&lt;a href=&quot;#Git-常用命令&quot; class=&quot;headerlink&quot; title=&quot;Git 常用命令&quot;&gt;&lt;/a&gt;Git 常用命令&lt;/h2&gt;&lt;h3 id=&quot;创建版本库&quot;&gt;&lt;a href=&quot;#创建版本库&quot; class=&quot;headerlink&quot; title=&quot;创建版本库&quot;&gt;&lt;/a&gt;创建版本库&lt;/h3&gt;&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git init  #初始化 git 本地仓库&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git add xxx #添加文件到本地库&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git commit -m &amp;quot;&amp;quot; #提交文件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;bash&quot;&gt;本地库和远程库关联&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git remote add name(本地库名字) git@github.com:path(用户名)/xxx.git(仓库名)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git remote add 本地库名字 远程仓库路径&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="Git" scheme="https://killy412.com/categories/Git/"/>
    
    
    <category term="Git" scheme="https://killy412.com/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>深入理解JVM虚拟机-内存</title>
    <link href="https://killy412.com/2021/01/30/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3JVM%E8%99%9A%E6%8B%9F%E6%9C%BA-%E5%86%85%E5%AD%98/"/>
    <id>https://killy412.com/2021/01/30/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3JVM%E8%99%9A%E6%8B%9F%E6%9C%BA-%E5%86%85%E5%AD%98/</id>
    <published>2021-01-30T02:47:53.000Z</published>
    <updated>2021-05-17T12:47:25.062Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;运行时数据区域&quot;&gt;&lt;a href=&quot;#运行时数据区域&quot; class=&quot;headerlink&quot; title=&quot;运行时数据区域&quot;&gt;&lt;/a&gt;运行时数据区域&lt;/h2&gt;&lt;h3 id=&quot;程序计数器&quot;&gt;&lt;a href=&quot;#程序计数器&quot; class=&quot;headerlink&quot; title=&quot;程序计数器&quot;&gt;&lt;/a&gt;程序计数器&lt;/h3&gt;&lt;p&gt;(PC Register),记录当前线程执行程序的位置,改变计数器的值确定下一条执行的指令,线程私有.&lt;br&gt;程序计数器是唯一不会出现 &lt;code&gt;OOM&lt;/code&gt; 情况的内存区域&lt;/p&gt;</summary>
    
    
    
    <category term="JVM" scheme="https://killy412.com/categories/JVM/"/>
    
    
    <category term="JVM" scheme="https://killy412.com/tags/JVM/"/>
    
    <category term="内存详解" scheme="https://killy412.com/tags/%E5%86%85%E5%AD%98%E8%AF%A6%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>Linux常用命令</title>
    <link href="https://killy412.com/2021/01/24/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <id>https://killy412.com/2021/01/24/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</id>
    <published>2021-01-23T16:32:11.000Z</published>
    <updated>2021-03-02T14:12:23.179Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;常用命令&quot;&gt;&lt;a href=&quot;#常用命令&quot; class=&quot;headerlink&quot; title=&quot;常用命令&quot;&gt;&lt;/a&gt;常用命令&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 查看某个进程的子进程&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pstree -p [pid]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 查看进程中子线程的资源占用情况&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;top -Hp [pid]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;top -n 1 -H -p [pid]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 查看磁盘情况&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;df -hl&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 查找程序&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ps -ef | grep -v grep | grep fisco-bcos&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 查看端口占用情况&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;netstat -ano | grep tcp |grep 8545&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;netstat -tnlp | grep ssh&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;netstat -anpt| grep ssh&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 查看端口占用进程&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;lsof -i:&amp;lt;端口&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 添加执行权限&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;chmod a+x &amp;lt;文件名&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="Linux" scheme="https://killy412.com/categories/Linux/"/>
    
    
    <category term="Linux" scheme="https://killy412.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>设计模式之代理</title>
    <link href="https://killy412.com/2021/01/24/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E4%BB%A3%E7%90%86/"/>
    <id>https://killy412.com/2021/01/24/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E4%BB%A3%E7%90%86/</id>
    <published>2021-01-23T16:32:00.000Z</published>
    <updated>2021-01-25T13:50:19.870Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h2&gt;&lt;p&gt;代理主要分为两种,静态代理和动态代理. 动态代理又分&lt;code&gt;jdk&lt;/code&gt;动态代理和&lt;code&gt;cglib&lt;/code&gt;动态代理.&lt;/p&gt;
&lt;p&gt;静态代理是纯编码完成的,在编译完成的时候已经确认好类信息等.&lt;/p&gt;
&lt;p&gt;动态代理是在运行时动态生成的类字节码,并且加载到&lt;code&gt;jvm&lt;/code&gt;中.&lt;/p&gt;</summary>
    
    
    
    <category term="设计模式" scheme="https://killy412.com/categories/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
    
    <category term="设计模式" scheme="https://killy412.com/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
    <category term="代理" scheme="https://killy412.com/tags/%E4%BB%A3%E7%90%86/"/>
    
    <category term="动态代理" scheme="https://killy412.com/tags/%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>深入理解JVM虚拟机-GC</title>
    <link href="https://killy412.com/2021/01/19/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3JVM%E8%99%9A%E6%8B%9F%E6%9C%BA-GC/"/>
    <id>https://killy412.com/2021/01/19/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3JVM%E8%99%9A%E6%8B%9F%E6%9C%BA-GC/</id>
    <published>2021-01-19T13:07:53.000Z</published>
    <updated>2021-02-25T14:37:23.777Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;垃圾收集需要完成的三件事&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;哪些内存需要回收?&lt;/li&gt;
&lt;li&gt;什么时候回收?&lt;/li&gt;
&lt;li&gt;如何回收?&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="JVM" scheme="https://killy412.com/categories/JVM/"/>
    
    
    <category term="JVM" scheme="https://killy412.com/tags/JVM/"/>
    
    <category term="GC" scheme="https://killy412.com/tags/GC/"/>
    
  </entry>
  
  <entry>
    <title>IDEA显示Run Dashboard的方式和重置试用期以及常用插件(不定时更新..)</title>
    <link href="https://killy412.com/2021/01/02/IDEA%E6%98%BE%E7%A4%BARun-Dashboard%E7%9A%84%E6%96%B9%E5%BC%8F%E5%92%8C%E9%87%8D%E7%BD%AE%E8%AF%95%E7%94%A8%E6%9C%9F%E4%BB%A5%E5%8F%8A%E5%B8%B8%E7%94%A8%E6%8F%92%E4%BB%B6-%E4%B8%8D%E5%AE%9A%E6%97%B6%E6%9B%B4%E6%96%B0/"/>
    <id>https://killy412.com/2021/01/02/IDEA%E6%98%BE%E7%A4%BARun-Dashboard%E7%9A%84%E6%96%B9%E5%BC%8F%E5%92%8C%E9%87%8D%E7%BD%AE%E8%AF%95%E7%94%A8%E6%9C%9F%E4%BB%A5%E5%8F%8A%E5%B8%B8%E7%94%A8%E6%8F%92%E4%BB%B6-%E4%B8%8D%E5%AE%9A%E6%97%B6%E6%9B%B4%E6%96%B0/</id>
    <published>2021-01-02T04:48:30.000Z</published>
    <updated>2021-01-12T15:57:37.840Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;IDEA-显示-Run-Dashboard-的方式&quot;&gt;&lt;a href=&quot;#IDEA-显示-Run-Dashboard-的方式&quot; class=&quot;headerlink&quot; title=&quot;IDEA 显示 Run Dashboard 的方式&quot;&gt;&lt;/a&gt;IDEA 显示 Run Dashboard 的方式&lt;/h2&gt;&lt;p&gt;在.idea 文件夹下面找到 workspace.xml 文件, 添加以下标签&lt;/p&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;component&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;RunDashboard&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;option&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;configurationTypes&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;set&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;option&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;SpringBootApplicationConfigurationType&amp;quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;set&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;option&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;component&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="工具" scheme="https://killy412.com/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="工具" scheme="https://killy412.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
    <category term="IDEA" scheme="https://killy412.com/tags/IDEA/"/>
    
    <category term="插件" scheme="https://killy412.com/tags/%E6%8F%92%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>2020总结以及新年展望</title>
    <link href="https://killy412.com/2021/01/01/2020%E6%80%BB%E7%BB%93%E4%BB%A5%E5%8F%8A%E6%96%B0%E5%B9%B4%E5%B1%95%E6%9C%9B/"/>
    <id>https://killy412.com/2021/01/01/2020%E6%80%BB%E7%BB%93%E4%BB%A5%E5%8F%8A%E6%96%B0%E5%B9%B4%E5%B1%95%E6%9C%9B/</id>
    <published>2021-01-01T05:51:00.000Z</published>
    <updated>2021-01-01T09:07:50.877Z</updated>
    
    
    <summary type="html">&lt;h3 id=&quot;2020-总结&quot;&gt;&lt;a href=&quot;#2020-总结&quot; class=&quot;headerlink&quot; title=&quot;2020 总结&quot;&gt;&lt;/a&gt;2020 总结&lt;/h3&gt;&lt;p&gt;不出意外给 20 年定的小目标没有实现,但是 19 年立下的三年 flag 实现了. 虽然那个 flag 级别有点低. 总结一下今年,跳槽两次,工资翻番(主要起点比较低). 下次跳槽已在计划之中.. 在上家公司从头搭了个分布式框架.使用容器部署了分布式集群. 应付面试和入职不太忙的这段时间看了几本书.&lt;/p&gt;</summary>
    
    
    
    <category term="年度总结" scheme="https://killy412.com/categories/%E5%B9%B4%E5%BA%A6%E6%80%BB%E7%BB%93/"/>
    
    
    <category term="总结" scheme="https://killy412.com/tags/%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>Mybatis使用MySql JSON类型映射</title>
    <link href="https://killy412.com/2020/11/23/Mybatis%E4%BD%BF%E7%94%A8MySql-JSON%E7%B1%BB%E5%9E%8B%E6%98%A0%E5%B0%84/"/>
    <id>https://killy412.com/2020/11/23/Mybatis%E4%BD%BF%E7%94%A8MySql-JSON%E7%B1%BB%E5%9E%8B%E6%98%A0%E5%B0%84/</id>
    <published>2020-11-23T11:33:44.000Z</published>
    <updated>2020-12-12T15:24:18.569Z</updated>
    
    
    <summary type="html">&lt;h3 id=&quot;MyBatis-中使用自定义转换器处理-json-类型&quot;&gt;&lt;a href=&quot;#MyBatis-中使用自定义转换器处理-json-类型&quot; class=&quot;headerlink&quot; title=&quot;MyBatis 中使用自定义转换器处理 json 类型&quot;&gt;&lt;/a&gt;MyBatis 中使用自定义转换器处理 json 类型&lt;/h3&gt;&lt;p&gt;mysql 在 5.7.8 版本以后就支持了 json 这种数据类型,在程序中处理的方法有很多,可以直接用 string 去接收 json 类型,然后再转. 也可以使用自定义转换器,需要继承&lt;code&gt;BaseTypeHandler&amp;lt;&amp;gt;&lt;/code&gt;类,然后在配置文件中加个扫描路径,在使用的地方指定转换器.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;自定义转换器</summary>
    
    
    
    <category term="Mybatis" scheme="https://killy412.com/categories/Mybatis/"/>
    
    
    <category term="Mybatis" scheme="https://killy412.com/tags/Mybatis/"/>
    
    <category term="MySql" scheme="https://killy412.com/tags/MySql/"/>
    
    <category term="JSON" scheme="https://killy412.com/tags/JSON/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot项目打包依赖本地jar包问题</title>
    <link href="https://killy412.com/2020/11/16/SpringBoot%E9%A1%B9%E7%9B%AE%E6%89%93%E5%8C%85%E4%BE%9D%E8%B5%96%E6%9C%AC%E5%9C%B0jar%E5%8C%85%E9%97%AE%E9%A2%98/"/>
    <id>https://killy412.com/2020/11/16/SpringBoot%E9%A1%B9%E7%9B%AE%E6%89%93%E5%8C%85%E4%BE%9D%E8%B5%96%E6%9C%AC%E5%9C%B0jar%E5%8C%85%E9%97%AE%E9%A2%98/</id>
    <published>2020-11-16T07:16:44.000Z</published>
    <updated>2020-11-16T15:27:10.213Z</updated>
    
    
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;最近公司项目业务中遇到一些关于 Word 转换 pdf 相关的功能.功能的实现用到了网上的第三方 jar 包,没有中央仓库地址,只能下载下来本地引用依赖. 因此遇到了一些引用本地 jar 包和打包的问题.&lt;/p&gt;</summary>
    
    
    
    <category term="开发日志" scheme="https://killy412.com/categories/%E5%BC%80%E5%8F%91%E6%97%A5%E5%BF%97/"/>
    
    
    <category term="SpringBoot" scheme="https://killy412.com/tags/SpringBoot/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot 手动控制事务</title>
    <link href="https://killy412.com/2020/11/11/SpringBoot-%E6%89%8B%E5%8A%A8%E6%8E%A7%E5%88%B6%E4%BA%8B%E5%8A%A1/"/>
    <id>https://killy412.com/2020/11/11/SpringBoot-%E6%89%8B%E5%8A%A8%E6%8E%A7%E5%88%B6%E4%BA%8B%E5%8A%A1/</id>
    <published>2020-11-11T10:41:20.000Z</published>
    <updated>2020-11-11T15:18:42.738Z</updated>
    
    
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;今天进行项目开发时遇到一个事物相关问题,有一块业务使用策略模式实现的,使用注释式事物是不生效的.个人猜测这一块应该是&lt;code&gt;Red.handler()&lt;/code&gt;方法不是被spring所管理的bean,所以注解式事物是无效的. 所以把这块改成了手动控制事物.&lt;/p&gt;</summary>
    
    
    
    <category term="SpringBoot" scheme="https://killy412.com/categories/SpringBoot/"/>
    
    
    <category term="SpringBoot" scheme="https://killy412.com/tags/SpringBoot/"/>
    
    <category term="事物" scheme="https://killy412.com/tags/%E4%BA%8B%E7%89%A9/"/>
    
  </entry>
  
  <entry>
    <title>快速搭建单群组FISCO BCOS联盟链</title>
    <link href="https://killy412.com/2020/11/11/%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BA%E5%8D%95%E7%BE%A4%E7%BB%84FISCO-BCOS%E8%81%94%E7%9B%9F%E9%93%BE/"/>
    <id>https://killy412.com/2020/11/11/%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BA%E5%8D%95%E7%BE%A4%E7%BB%84FISCO-BCOS%E8%81%94%E7%9B%9F%E9%93%BE/</id>
    <published>2020-11-11T05:15:56.000Z</published>
    <updated>2020-11-11T15:18:42.738Z</updated>
    
    
    <summary type="html">&lt;h3 id=&quot;准备环境&quot;&gt;&lt;a href=&quot;#准备环境&quot; class=&quot;headerlink&quot; title=&quot;准备环境&quot;&gt;&lt;/a&gt;准备环境&lt;/h3&gt;&lt;h4 id=&quot;安装依赖&quot;&gt;&lt;a href=&quot;#安装依赖&quot; class=&quot;headerlink&quot; title=&quot;安装依赖&quot;&gt;&lt;/a&gt;安装依赖&lt;/h4&gt;&lt;p&gt;开发部署工具 build_chain.sh脚本依赖于openssl, curl，使用下面的指令安装。 若为CentOS，将下面命令中的apt替换为yum执行即可。macOS执行brew install openssl curl即可（macOS自带的openssl指令选项不同，请执行安装标准openssl）。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# ubuntu环境安装依赖&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo apt install -y openssl curl  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# centos环境安装依赖&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo yum install -y openssl openssl-devel &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="区块链" scheme="https://killy412.com/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
    
    <category term="区块链" scheme="https://killy412.com/tags/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
  </entry>
  
  <entry>
    <title>Docker常用命令</title>
    <link href="https://killy412.com/2020/11/09/Docker%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <id>https://killy412.com/2020/11/09/Docker%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</id>
    <published>2020-11-09T14:03:47.000Z</published>
    <updated>2021-02-25T12:40:09.510Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;安装-Docker-虚拟机&quot;&gt;&lt;a href=&quot;#安装-Docker-虚拟机&quot; class=&quot;headerlink&quot; title=&quot;安装 Docker 虚拟机&quot;&gt;&lt;/a&gt;安装 Docker 虚拟机&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;yum install -y yum-utils &lt;span class=&quot;comment&quot;&gt;# 安装依赖软件包&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;yum-config-manager --add-repo https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo &lt;span class=&quot;comment&quot;&gt;#添加软件仓库 阿里云docker安装包&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;yum makecache fast  &lt;span class=&quot;comment&quot;&gt;# 启用缓存&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;yum list docker-ce --showduplicates | sort -r  &lt;span class=&quot;comment&quot;&gt;# 查看版本 选择一个&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;yum install docker-ce-&amp;lt;version&amp;gt; -y        &lt;span class=&quot;comment&quot;&gt;# 安装&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;systemctl &lt;span class=&quot;built_in&quot;&gt;enable&lt;/span&gt; docker &lt;span class=&quot;comment&quot;&gt;# 开机自启&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;systemctl start docker  &lt;span class=&quot;comment&quot;&gt;# 启动&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;systemctl stop docker  &lt;span class=&quot;comment&quot;&gt;# 停止&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="Docker" scheme="https://killy412.com/categories/Docker/"/>
    
    
    <category term="Docker" scheme="https://killy412.com/tags/Docker/"/>
    
    <category term="运维" scheme="https://killy412.com/tags/%E8%BF%90%E7%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title>docker设置时区</title>
    <link href="https://killy412.com/2020/11/09/Docker%E8%AE%BE%E7%BD%AE%E6%97%B6%E5%8C%BA/"/>
    <id>https://killy412.com/2020/11/09/Docker%E8%AE%BE%E7%BD%AE%E6%97%B6%E5%8C%BA/</id>
    <published>2020-11-09T13:59:06.000Z</published>
    <updated>2020-11-10T14:01:41.108Z</updated>
    
    
    <summary type="html">&lt;h3 id=&quot;dockerfile-文件中添加如下两句&quot;&gt;&lt;a href=&quot;#dockerfile-文件中添加如下两句&quot; class=&quot;headerlink&quot; title=&quot;dockerfile 文件中添加如下两句&quot;&gt;&lt;/a&gt;dockerfile 文件中添加如下两句&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;RUN &lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;Asia/Shanghai&amp;quot;&lt;/span&gt; &amp;gt; /etc/timezone&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;RUN dpkg-reconfigure -f noninteractive tzdata&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="Docker" scheme="https://killy412.com/categories/Docker/"/>
    
    
    <category term="Docker" scheme="https://killy412.com/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>分布式理论</title>
    <link href="https://killy412.com/2020/11/08/%E5%88%86%E5%B8%83%E5%BC%8F%E7%90%86%E8%AE%BA/"/>
    <id>https://killy412.com/2020/11/08/%E5%88%86%E5%B8%83%E5%BC%8F%E7%90%86%E8%AE%BA/</id>
    <published>2020-11-08T13:18:07.000Z</published>
    <updated>2020-11-10T14:01:41.113Z</updated>
    
    
    <summary type="html">&lt;h4 id=&quot;CAP-理论&quot;&gt;&lt;a href=&quot;#CAP-理论&quot; class=&quot;headerlink&quot; title=&quot;CAP 理论&quot;&gt;&lt;/a&gt;CAP 理论&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;CAP 原则又称 CAP 定理，指的是在一个分布式系统中，Consistency（一致性）、 Availability（可用性）、Partition tolerance（分区容错性）这三个基本需求，最多只能同时满足其中的 2 个。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="分布式" scheme="https://killy412.com/categories/%E5%88%86%E5%B8%83%E5%BC%8F/"/>
    
    
    <category term="分布式" scheme="https://killy412.com/tags/%E5%88%86%E5%B8%83%E5%BC%8F/"/>
    
  </entry>
  
</feed>
